<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="drone">
  <!-- Specify some standard inertial calculations https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <!--this value is changed by the launch script.-->
  <!-- <xacro:property name="using_gazebo_classic" value="0"/> -->
  `


        
  <!-- <xacro:property name="root_basebottom_offset" value="0.312"/> -->
  <!-- <xacro:property name="root_basebottom_offset" value="0.1"/> -->
  <link name="root_link">
        </link>
  <joint name="root_joint" type="fixed">
    <parent link="root_link"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.665"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/hexagonal_prism_height_1_outer_diameter_1.stl" scale="0.45 0.45 0.08"/>
      </geometry>
      <origin rpy="0.0 0.0 0.523598775" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_base_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://drone/meshes/hexagonal_prism_height_1_outer_diameter_1.stl" scale="0.45 0.45 0.08"/>
      </geometry>
      <origin rpy="0.0 0.0 0.523598775" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="6"/>
      <inertia ixx="0.0791375" ixy="0.0" ixz="0.0" iyy="0.0791375" iyz="0.0" izz="0.151875"/>
      <origin rpy="0.0 0.0 0.523598775" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="base_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher"/>
  </gazebo>
  <joint name="base_arm_joint_0" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_0"/>
    <origin rpy="0.08726646249999999 0 3.141592653589793" xyz="-2.7554552980815448e-17 -0.225 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_0">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_0">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_0">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_0">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_0" type="revolute">
    <parent link="arm_link_0"/>
    <child link="prop_link_0"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_0">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_cw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_0">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_0">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_0</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_0</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_0</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <joint name="base_arm_joint_1" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_1"/>
    <origin rpy="0.08726646249999999 0 6.283185303589793" xyz="8.077035591889878e-10 0.225 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_1">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_1">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_1">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_1">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_1" type="revolute">
    <parent link="arm_link_1"/>
    <child link="prop_link_1"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_1">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_ccw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_1">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_1">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_1</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_1</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>-1.8369701987210297e-16 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_1</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <joint name="base_arm_joint_2" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_2"/>
    <origin rpy="0.08726646249999999 0 5.235987753589793" xyz="0.1948557161207332 0.11249999953367212 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_2">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_2">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_2">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_2">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_2" type="revolute">
    <parent link="arm_link_2"/>
    <child link="prop_link_2"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_2">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_cw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_2">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_2">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_2</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_2</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_2</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <joint name="base_arm_joint_3" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_3"/>
    <origin rpy="0.08726646249999999 0 8.377580403589793" xyz="-0.19485571652458497 -0.11249999883418035 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_3">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_3">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_3">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_3">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_3" type="revolute">
    <parent link="arm_link_3"/>
    <child link="prop_link_3"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_3">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_ccw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_3">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_3">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_3</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_3</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>-1.8369701987210297e-16 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_3</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <joint name="base_arm_joint_4" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_4"/>
    <origin rpy="0.08726646249999999 0 4.188790203589793" xyz="0.19485571571688143 -0.11250000023316394 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_4">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_4">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_4">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_4">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_4" type="revolute">
    <parent link="arm_link_4"/>
    <child link="prop_link_4"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_4">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_ccw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_4">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_4">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_4</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_4</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>-1.8369701987210297e-16 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_4</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <joint name="base_arm_joint_5" type="revolute">
    <parent link="base_link"/>
    <child link="arm_link_5"/>
    <origin rpy="0.08726646249999999 0 7.330382853589793" xyz="-0.19485571531302967 0.11250000093265573 0"/>
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-1.57" upper="1.57" velocity="10.0"/>
    <dynamics damping="10" friction="0.0"/>
  </joint>
  <!-- <joint name="${base_arm_joint}" type="fixed">  
            <parent link="${parent_link}"/>
            <child link="${arm_link}"/>
            <origin xyz="${-1*a_dis_from_center*sin(angle + pi)} ${a_dis_from_center*cos(angle + pi)} 0" rpy="0 0 ${angle + pi}"/>
        </joint> -->
  <gazebo reference="base_arm_joint_5">
    <!-- <axis> -->
    <!-- <implicitSpringDamper>true</implicitSpringDamper> -->
    <springStiffness>500</springStiffness>
    <springReference>0</springReference>
    <!-- </axis> -->
  </gazebo>
  <link name="arm_link_5">
    <visual>
      <geometry>
        <cylinder length="0.56" radius="0.0125"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
      <material name="0.1 0.1 0.1 1_arm_link_5">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.56"/>
      </geometry>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01314479166666667" ixy="0.0" ixz="0.0" iyy="0.01314479166666667" iyz="0.0" izz="0.00015625000000000003"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0  0.28 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="arm_link_5">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="rotor_joint_5" type="revolute">
    <parent link="arm_link_5"/>
    <child link="prop_link_5"/>
    <!-- <origin xyz="0 ${(cos(a_incline_angle) * float(a_length)) - (sin(a_incline_angle) * float(rotor_dis_from_arm))} ${(sin(a_incline_angle) * float(a_length)) + (cos(a_incline_angle) * float(rotor_dis_from_arm))}" rpy="${a_incline_angle} 0 0"/> -->
    <origin rpy="0 0 0" xyz="0 0.56 0.03"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-1e+16" upper="1e+16" velocity="4188.790204786391"/>
    <dynamics damping="0.004"/>
  </joint>
  <!-- <gazebo reference="${rotor_joint}">
            <physics>
                <ode>
                    <implicit_spring_damper>1</implicit_spring_damper>
                </ode>
            </physics>
        </gazebo> -->
  <link name="prop_link_5">
    <visual>
      <geometry>
        <mesh filename="package://drone/meshes/iris_prop_cw.dae" scale="2.34 2.34 2.34"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_prop_link_5">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.55 0.06 0.03"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.000312" ixy="0.0" ixz="0.0" iyy="0.0053345" iyz="0.0" izz="0.005363328"/>
    </inertial>
    <gazebo>
      <velocity_decay/>
      <gravity>1</gravity>
      <!-- <self_collide>0</self_collide> -->
    </gazebo>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="prop_link_5">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-apply-joint-force-system" name="gz::sim::systems::ApplyJointForce">
      <joint_name>rotor_joint_5</joint_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>0.2 0.0 0</cp>
      <forward>6.123233995736766e-17 -1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_5</link_name>
    </plugin>
  </gazebo>
  <!-- <xacro:property name="blade_angle" value="${(num * pi) / 12}"/> -->
  <gazebo>
    <!--for gazebo harmonic-->
    <plugin filename="gz-sim-lift-drag-system" name="gz::sim::systems::LiftDrag">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.3</cla>
      <cda>0.1</cda>
      <cma>0.0</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.008</area>
      <air_density>1.2041</air_density>
      <cp>-0.2 2.4492935982947065e-17 0</cp>
      <forward>6.123233995736766e-17 1.0 0</forward>
      <upward>0 0 1</upward>
      <link_name>prop_link_5</link_name>
    </plugin>
  </gazebo>
  <!-- end Define arms! -->
  <!-- end Define arms! -->
  <!-- Define IMU! -->
  <joint name="imu_joint" type="revolute">
    <parent link="base_link"/>
    <!-- <parent link="root_link"/> -->
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- <origin xyz="0 0 ${base_root_offset}" rpy="0 0 0"/> -->
    <axis xyz="0 0 1"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <dynamics damping="1" friction="0"/>
    <!-- <use_parent_model_frame>1</use_parent_model_frame> ASDFASDFASDFAASDFHASDCXVZAS;Q34-9057ASOGHSDFAAAASDGCHANGE ME CHANGE ME CUZ i'M RISKY!!!!!!!!!!!!-->
  </joint>
  <gazebo reference="imu_joint">
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
  </gazebo>
  <link name="imu_link">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00002" iyz="0" izz="0.00002"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.09 0.09 0.09"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
  </link>
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <pose degrees="true">0 0 0 180 0 0</pose>
      <always_on>1</always_on>
      <update_rate>1000.0</update_rate>
    </sensor>
  </gazebo>
  <!-- end Define IMU! -->
  <gazebo>
    <plugin filename="ArduPilotPlugin" name="ArduPilotPlugin">
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <!-- <fdm_port_out>9003</fdm_port_out> Param <fdm_port_out> is deprecated, connection is auto detected-->
      <connectionTimeoutMaxCount>0</connectionTimeoutMaxCount>
      <!-- <have_32_channels>0</have_32_channels> -->
      <!--lock_step: whether or not to wait for the ardupilot sitl's packets and stop the frame till the packet is recieved. 
                    If the sitl laggs, simulation will pause till it resumes. I do not want that so I set it to 0.-->
      <lock_step>0</lock_step>
      <have_32_channels>0</have_32_channels>
      <!-- Frame conventions
                        modelXYZToAirplaneXForwardZDown:
                        - transforms body frame from orientation in Gazebo to NED

                        gazeboXYZToNED
                        - transforms world from Gazebo convention xyz = N -E -D
                            to ArduPilot convention xyz = NED

                        Zephyr is oriented x-left, y-back, z-up
                    -->
      <!-- <modelXYZToAirplaneXForwardZDown degrees="true">0 0 0 180 0 -90</modelXYZToAirplaneXForwardZDown>
                    <gazeboXYZToNED degrees="true">0 0 0 180 0 90</gazeboXYZToNED> -->
      <modelXYZToAirplaneXForwardZDown degrees="true">0 0 0 180 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED degrees="true">0 0 0 180 0 90</gazeboXYZToNED>
      <imuName>imu_link::imu_sensor</imuName>
      <control channel="0">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_0</jointName>
        <useForce>1</useForce>
        <multiplier>-800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="1">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_1</jointName>
        <useForce>1</useForce>
        <multiplier>800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="2">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_2</jointName>
        <useForce>1</useForce>
        <multiplier>-800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="3">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_3</jointName>
        <useForce>1</useForce>
        <multiplier>800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="4">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_4</jointName>
        <useForce>1</useForce>
        <multiplier>800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="5">
        <!--
                                    incoming control command [0, 1]
                                    so offset it by 0 to get [0, 1]
                                    and divide max target by 1.
                                    offset = 0
                                    multiplier = 838 max rpm / 1 = 838
                                -->
        <!--
                                    SERVO<N>_FUNCTION   ->      70 (Throttle)
                                    SERVO<N>_MAX        ->      servo_max
                                    SERVO<N>_MIN        ->      servo_min
                                    SERVO<N>_REVERSED   ->      cw_list[counter]
                                    SERVO<N>_TRIM       ->      
                                -->
        <!-- 
                                    The <useForce> tag determines how control commands are applied to the joint.
                                    When set to 1, the control commands are applied as forces (effort), 
                                    resulting in more realistic physical interactions; when set to 0, 
                                    the commands are applied directly as velocities or positions.
                                -->
        <jointName>rotor_joint_5</jointName>
        <useForce>1</useForce>
        <multiplier>-800</multiplier>
        <offset>0</offset>
        <servo_min>1100</servo_min>
        <!--adeeedededd-->
        <servo_max>1900</servo_max>
        <!--adeeedededd-->
        <type>VELOCITY</type>
        <p_gain>0.2</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <!-- end Define arms! -->
    </plugin>
  </gazebo>
  <joint name="leg_0_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="leg_0_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="leg_0_link">
    <visual>
      <geometry>
        <cylinder length="0.6716583953171433" radius="0.01"/>
      </geometry>
      <origin rpy="0.4136892132788634 0 0" xyz="0.075 0.23 -0.3075"/>
      <material name="0.1 0.1 0.1 1_leg_0_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.6716583953171433"/>
      </geometry>
      <origin rpy="0.4136892132788634 0 0" xyz="0.075 0.23 -0.3075"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.018809375" ixy="0.0" ixz="0.0" iyy="0.018809375" iyz="0.0" izz="2.5e-05"/>
      <origin rpy="0.4136892132788634 0 0" xyz="0.075 0.23 -0.3075"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="leg_0_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="leg_1_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="leg_1_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="leg_1_link">
    <visual>
      <geometry>
        <cylinder length="0.6716583953171433" radius="0.01"/>
      </geometry>
      <origin rpy="0.4136892132788634 0 0" xyz="-0.075 0.23 -0.3075"/>
      <material name="0.1 0.1 0.1 1_leg_1_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.6716583953171433"/>
      </geometry>
      <origin rpy="0.4136892132788634 0 0" xyz="-0.075 0.23 -0.3075"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.018809375" ixy="0.0" ixz="0.0" iyy="0.018809375" iyz="0.0" izz="2.5e-05"/>
      <origin rpy="0.4136892132788634 0 0" xyz="-0.075 0.23 -0.3075"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="leg_1_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="leg_2_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="leg_2_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="leg_2_link">
    <visual>
      <geometry>
        <cylinder length="0.6716583953171433" radius="0.01"/>
      </geometry>
      <origin rpy="-0.4136892132788634 0 0" xyz="0.075 -0.23 -0.3075"/>
      <material name="0.1 0.1 0.1 1_leg_2_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.6716583953171433"/>
      </geometry>
      <origin rpy="-0.4136892132788634 0 0" xyz="0.075 -0.23 -0.3075"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.018809375" ixy="0.0" ixz="0.0" iyy="0.018809375" iyz="0.0" izz="2.5e-05"/>
      <origin rpy="-0.4136892132788634 0 0" xyz="0.075 -0.23 -0.3075"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="leg_2_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="leg_3_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="leg_3_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="leg_3_link">
    <visual>
      <geometry>
        <cylinder length="0.6716583953171433" radius="0.01"/>
      </geometry>
      <origin rpy="-0.4136892132788634 0 0" xyz="-0.075 -0.23 -0.3075"/>
      <material name="0.1 0.1 0.1 1_leg_3_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.6716583953171433"/>
      </geometry>
      <origin rpy="-0.4136892132788634 0 0" xyz="-0.075 -0.23 -0.3075"/>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.018809375" ixy="0.0" ixz="0.0" iyy="0.018809375" iyz="0.0" izz="2.5e-05"/>
      <origin rpy="-0.4136892132788634 0 0" xyz="-0.075 -0.23 -0.3075"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="leg_3_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <joint name="feet_0_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="feet_0_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="feet_0_link">
    <visual>
      <geometry>
        <cylinder length="0.51" radius="0.01"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0.365 -0.615"/>
      <material name="0.1 0.1 0.1 1_feet_0_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.12000000000000001 0.61"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0.365 -0.615"/>
    </collision>
    <inertial>
      <mass value="0.4"/>
      <inertia ixx="0.008709999999999999" ixy="0.0" ixz="0.0" iyy="0.008709999999999999" iyz="0.0" izz="8e-05"/>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0.365 -0.615"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="feet_0_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="feet_0_link">
            <mu1 value="1000"/>
            <mu2 value="1000"/>
        </gazebo> -->
  <joint name="feet_1_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="feet_1_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
  </joint>
  <link name="feet_1_link">
    <visual>
      <geometry>
        <cylinder length="0.51" radius="0.01"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 -0.365 -0.615"/>
      <material name="0.1 0.1 0.1 1_feet_1_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.12000000000000001 0.61"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 -0.365 -0.615"/>
    </collision>
    <inertial>
      <mass value="0.4"/>
      <inertia ixx="0.008709999999999999" ixy="0.0" ixz="0.0" iyy="0.008709999999999999" iyz="0.0" izz="8e-05"/>
      <origin rpy="0 1.5707963267948966 0" xyz="0 -0.365 -0.615"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="feet_1_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="feet_1_link">
            <mu1 value="1000"/>
            <mu2 value="1000"/>
        </gazebo> -->
  <joint name="SubSystem_block_joint" type="fixed">
    <parent link="base_link"/>
    <child link="SubSystem_block_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.09"/>
  </joint>
  <link name="SubSystem_block_link">
    <visual>
      <geometry>
        <box size="0.36 0.155 0.09"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="0.1 0.1 0.1 1_SubSystem_block_link">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.36 0.155 0.09"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="8"/>
      <inertia ixx="0.021416666666666667" ixy="0" ixz="0" iyy="0.09179999999999999" iyz="0" izz="0.10241666666666666"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- </xacro:if> -->
  <gazebo reference="SubSystem_block_link">
    <!-- <ode>
                <mu1 value="1000000"/>
                <mu2 value="1000000"/>
            </ode> -->
    <self_collide>0</self_collide>
  </gazebo>
</robot>
<!-- 
https://ardupilot.org/copter/docs/connect-escs-and-motors.html



            X
            ^
            |
            |
            | z
  Y <~~~~~~~o~~~~~~~~
            |
            |
            |



                        (front)
                  120deg            60deg         
                  cw (2)           ccw (4)
                    \               /
                     \             /
                       \         /
                        \       /
                          \   /
  180deg ccw(1) ~~~~~~~~~~~~~~~~~~~~~~~~ cw(0) 0deg
                          /   \
                        /       \
                       /         \
                     /             \
                    /               \
                  cw (5)           ccw (3)
                  240deg           300deg
      
      
      
      positive yaw is ccw and negative is cw

 -->
